package maps

import (
	"github.com/opengovern/og-describer-kubernetes/discovery/pkg/es"
)

var ResourceTypesToTables = map[string]string{
  "Kubernetes/Resource": "kubernetes_resource",
  "Kubernetes/Node": "kubernetes_node",
  "Kubernetes/PersistentVolume": "kubernetes_persistent_volume",
  "Kubernetes/PersistentVolumeClaim": "kubernetes_persistent_volume_claim",
  "Kubernetes/Pod": "kubernetes_pod",
  "Kubernetes/Secret": "kubernetes_secret",
  "Kubernetes/Service": "kubernetes_service",
  "Kubernetes/ConfigMap": "kubernetes_config_map",
  "Kubernetes/ServiceAccount": "kubernetes_service_account",
  "Kubernetes/StatefulSet": "kubernetes_stateful_set",
  "Kubernetes/Deployment": "kubernetes_deployment",
  "Kubernetes/ReplicaSet": "kubernetes_replicaset",
  "Kubernetes/DaemonSet": "kubernetes_daemonset",
  "Kubernetes/Endpoint": "kubernetes_endpoints",
  "Kubernetes/EndpointSlice": "kubernetes_endpoint_slice",
  "Kubernetes/Event": "kubernetes_event",
  "Kubernetes/Job": "kubernetes_job",
  "Kubernetes/CronJob": "kubernetes_cronjob",
  "Kubernetes/Ingress": "kubernetes_ingress",
  "Kubernetes/NetworkPolicy": "kubernetes_network_policy",
  "Kubernetes/Role": "kubernetes_role",
  "Kubernetes/RoleBinding": "kubernetes_role_binding",
  "Kubernetes/Cluster": "kubernetes_cluster",
  "Kubernetes/ClusterRole": "kubernetes_cluster_role",
  "Kubernetes/ClusterRoleBinding": "kubernetes_cluster_role_binding",
  "Kubernetes/PodDisruptionBudget": "kubernetes_pod_disruption_budget",
  "Kubernetes/PodTemplate": "kubernetes_pod_template",
  "Kubernetes/HorizontalPodAutoscaler": "kubernetes_horizontal_pod_autoscaler",
  "Kubernetes/CustomResourceDefinition": "kubernetes_custom_resource_definition",
  "Kubernetes/CustomResource": "kubernetes_custom_resource",
  "Kubernetes/StorageClass": "kubernetes_storage_class",
  "Kubernetes/LimitRange": "kubernetes_limit_range",
  "Kubernetes/Namespace": "kubernetes_namespace",
  "Kubernetes/ReplicationController": "kubernetes_replication_controller",
  "Kubernetes/RessourceQuota": "kubernetes_resource_quota",
}

var ResourceTypeToDescription = map[string]interface{}{
  "Kubernetes/Resource": opengovernance.KubernetesResource{},
  "Kubernetes/Node": opengovernance.KubernetesNode{},
  "Kubernetes/PersistentVolume": opengovernance.KubernetesPersistentVolume{},
  "Kubernetes/PersistentVolumeClaim": opengovernance.KubernetesPersistentVolumeClaim{},
  "Kubernetes/Pod": opengovernance.KubernetesPod{},
  "Kubernetes/Secret": opengovernance.KubernetesSecret{},
  "Kubernetes/Service": opengovernance.KubernetesService{},
  "Kubernetes/ConfigMap": opengovernance.KubernetesConfigMap{},
  "Kubernetes/ServiceAccount": opengovernance.KubernetesServiceAccount{},
  "Kubernetes/StatefulSet": opengovernance.KubernetesStatefulSet{},
  "Kubernetes/Deployment": opengovernance.KubernetesDeployment{},
  "Kubernetes/ReplicaSet": opengovernance.KubernetesReplicaSet{},
  "Kubernetes/DaemonSet": opengovernance.KubernetesDaemonSet{},
  "Kubernetes/Endpoint": opengovernance.KubernetesEndpoint{},
  "Kubernetes/EndpointSlice": opengovernance.KubernetesEndpointSlice{},
  "Kubernetes/Event": opengovernance.KubernetesEvent{},
  "Kubernetes/Job": opengovernance.KubernetesJob{},
  "Kubernetes/CronJob": opengovernance.KubernetesCronJob{},
  "Kubernetes/Ingress": opengovernance.KubernetesIngress{},
  "Kubernetes/NetworkPolicy": opengovernance.KubernetesNetworkPolicy{},
  "Kubernetes/Role": opengovernance.KubernetesRole{},
  "Kubernetes/RoleBinding": opengovernance.KubernetesRoleBinding{},
  "Kubernetes/Cluster": opengovernance.KubernetesCluster{},
  "Kubernetes/ClusterRole": opengovernance.KubernetesClusterRole{},
  "Kubernetes/ClusterRoleBinding": opengovernance.KubernetesClusterRoleBinding{},
  "Kubernetes/PodDisruptionBudget": opengovernance.KubernetesPodDisruptionBudget{},
  "Kubernetes/PodTemplate": opengovernance.KubernetesPodTemplate{},
  "Kubernetes/HorizontalPodAutoscaler": opengovernance.KubernetesHorizontalPodAutoscaler{},
  "Kubernetes/CustomResourceDefinition": opengovernance.KubernetesCustomResourceDefinition{},
  "Kubernetes/CustomResource": opengovernance.KubernetesCustomResource{},
  "Kubernetes/StorageClass": opengovernance.KubernetesStorageClass{},
  "Kubernetes/LimitRange": opengovernance.KubernetesLimitRange{},
  "Kubernetes/Namespace": opengovernance.KubernetesNamespace{},
  "Kubernetes/ReplicationController": opengovernance.KubernetesReplicationController{},
  "Kubernetes/RessourceQuota": opengovernance.KubernetesResourceQuota{},
}

var TablesToResourceTypes = map[string]string{
  "kubernetes_resource": "Kubernetes/Resource",
  "kubernetes_node": "Kubernetes/Node",
  "kubernetes_persistent_volume": "Kubernetes/PersistentVolume",
  "kubernetes_persistent_volume_claim": "Kubernetes/PersistentVolumeClaim",
  "kubernetes_pod": "Kubernetes/Pod",
  "kubernetes_secret": "Kubernetes/Secret",
  "kubernetes_service": "Kubernetes/Service",
  "kubernetes_config_map": "Kubernetes/ConfigMap",
  "kubernetes_service_account": "Kubernetes/ServiceAccount",
  "kubernetes_stateful_set": "Kubernetes/StatefulSet",
  "kubernetes_deployment": "Kubernetes/Deployment",
  "kubernetes_replicaset": "Kubernetes/ReplicaSet",
  "kubernetes_daemonset": "Kubernetes/DaemonSet",
  "kubernetes_endpoints": "Kubernetes/Endpoint",
  "kubernetes_endpoint_slice": "Kubernetes/EndpointSlice",
  "kubernetes_event": "Kubernetes/Event",
  "kubernetes_job": "Kubernetes/Job",
  "kubernetes_cronjob": "Kubernetes/CronJob",
  "kubernetes_ingress": "Kubernetes/Ingress",
  "kubernetes_network_policy": "Kubernetes/NetworkPolicy",
  "kubernetes_role": "Kubernetes/Role",
  "kubernetes_role_binding": "Kubernetes/RoleBinding",
  "kubernetes_cluster": "Kubernetes/Cluster",
  "kubernetes_cluster_role": "Kubernetes/ClusterRole",
  "kubernetes_cluster_role_binding": "Kubernetes/ClusterRoleBinding",
  "kubernetes_pod_disruption_budget": "Kubernetes/PodDisruptionBudget",
  "kubernetes_pod_template": "Kubernetes/PodTemplate",
  "kubernetes_horizontal_pod_autoscaler": "Kubernetes/HorizontalPodAutoscaler",
  "kubernetes_custom_resource_definition": "Kubernetes/CustomResourceDefinition",
  "kubernetes_custom_resource": "Kubernetes/CustomResource",
  "kubernetes_storage_class": "Kubernetes/StorageClass",
  "kubernetes_limit_range": "Kubernetes/LimitRange",
  "kubernetes_namespace": "Kubernetes/Namespace",
  "kubernetes_replication_controller": "Kubernetes/ReplicationController",
  "kubernetes_resource_quota": "Kubernetes/RessourceQuota",
}
