package maps

import (
	"github.com/opengovern/og-describer-kubernetes/discovery/pkg/es"
)

var ResourceTypesToTables = map[string]string{
	"Kubernetes/Resource":                 "k8_resource",
	"Kubernetes/Node":                     "k8_node",
	"Kubernetes/PersistentVolume":         "k8_persistent_volume",
	"Kubernetes/PersistentVolumeClaim":    "k8_persistent_volume_claim",
	"Kubernetes/Pod":                      "k8_pod",
	"Kubernetes/Secret":                   "k8_secret",
	"Kubernetes/Service":                  "k8_service",
	"Kubernetes/ConfigMap":                "k8_config_map",
	"Kubernetes/ServiceAccount":           "k8_service_account",
	"Kubernetes/StatefulSet":              "k8_stateful_set",
	"Kubernetes/Deployment":               "k8_deployment",
	"Kubernetes/ReplicaSet":               "k8_replicaset",
	"Kubernetes/DaemonSet":                "k8_daemonset",
	"Kubernetes/Endpoint":                 "k8_endpoints",
	"Kubernetes/EndpointSlice":            "k8_endpoint_slice",
	"Kubernetes/Event":                    "k8_event",
	"Kubernetes/Job":                      "k8_job",
	"Kubernetes/CronJob":                  "k8_cronjob",
	"Kubernetes/Ingress":                  "k8_ingress",
	"Kubernetes/NetworkPolicy":            "k8_network_policy",
	"Kubernetes/Role":                     "k8_role",
	"Kubernetes/RoleBinding":              "k8_role_binding",
	"Kubernetes/Cluster":                  "k8_cluster",
	"Kubernetes/ClusterRole":              "k8_cluster_role",
	"Kubernetes/ClusterRoleBinding":       "k8_cluster_role_binding",
	"Kubernetes/PodDisruptionBudget":      "k8_pod_disruption_budget",
	"Kubernetes/PodTemplate":              "k8_pod_template",
	"Kubernetes/HorizontalPodAutoscaler":  "k8_horizontal_pod_autoscaler",
	"Kubernetes/CustomResourceDefinition": "k8_custom_resource_definition",
	"Kubernetes/CustomResource":           "k8_custom_resource",
	"Kubernetes/StorageClass":             "k8_storage_class",
	"Kubernetes/LimitRange":               "k8_limit_range",
	"Kubernetes/Namespace":                "k8_namespace",
	"Kubernetes/ReplicationController":    "k8_replication_controller",
	"Kubernetes/RessourceQuota":           "k8_resource_quota",
}

var ResourceTypeToDescription = map[string]interface{}{
	"Kubernetes/Resource":                 opengovernance.KubernetesResource{},
	"Kubernetes/Node":                     opengovernance.KubernetesNode{},
	"Kubernetes/PersistentVolume":         opengovernance.KubernetesPersistentVolume{},
	"Kubernetes/PersistentVolumeClaim":    opengovernance.KubernetesPersistentVolumeClaim{},
	"Kubernetes/Pod":                      opengovernance.KubernetesPod{},
	"Kubernetes/Secret":                   opengovernance.KubernetesSecret{},
	"Kubernetes/Service":                  opengovernance.KubernetesService{},
	"Kubernetes/ConfigMap":                opengovernance.KubernetesConfigMap{},
	"Kubernetes/ServiceAccount":           opengovernance.KubernetesServiceAccount{},
	"Kubernetes/StatefulSet":              opengovernance.KubernetesStatefulSet{},
	"Kubernetes/Deployment":               opengovernance.KubernetesDeployment{},
	"Kubernetes/ReplicaSet":               opengovernance.KubernetesReplicaSet{},
	"Kubernetes/DaemonSet":                opengovernance.KubernetesDaemonSet{},
	"Kubernetes/Endpoint":                 opengovernance.KubernetesEndpoint{},
	"Kubernetes/EndpointSlice":            opengovernance.KubernetesEndpointSlice{},
	"Kubernetes/Event":                    opengovernance.KubernetesEvent{},
	"Kubernetes/Job":                      opengovernance.KubernetesJob{},
	"Kubernetes/CronJob":                  opengovernance.KubernetesCronJob{},
	"Kubernetes/Ingress":                  opengovernance.KubernetesIngress{},
	"Kubernetes/NetworkPolicy":            opengovernance.KubernetesNetworkPolicy{},
	"Kubernetes/Role":                     opengovernance.KubernetesRole{},
	"Kubernetes/RoleBinding":              opengovernance.KubernetesRoleBinding{},
	"Kubernetes/Cluster":                  opengovernance.KubernetesCluster{},
	"Kubernetes/ClusterRole":              opengovernance.KubernetesClusterRole{},
	"Kubernetes/ClusterRoleBinding":       opengovernance.KubernetesClusterRoleBinding{},
	"Kubernetes/PodDisruptionBudget":      opengovernance.KubernetesPodDisruptionBudget{},
	"Kubernetes/PodTemplate":              opengovernance.KubernetesPodTemplate{},
	"Kubernetes/HorizontalPodAutoscaler":  opengovernance.KubernetesHorizontalPodAutoscaler{},
	"Kubernetes/CustomResourceDefinition": opengovernance.KubernetesCustomResourceDefinition{},
	"Kubernetes/CustomResource":           opengovernance.KubernetesCustomResource{},
	"Kubernetes/StorageClass":             opengovernance.KubernetesStorageClass{},
	"Kubernetes/LimitRange":               opengovernance.KubernetesLimitRange{},
	"Kubernetes/Namespace":                opengovernance.KubernetesNamespace{},
	"Kubernetes/ReplicationController":    opengovernance.KubernetesReplicationController{},
	"Kubernetes/RessourceQuota":           opengovernance.KubernetesResourceQuota{},
}

var TablesToResourceTypes = map[string]string{
	"k8_resource":                   "Kubernetes/Resource",
	"k8_node":                       "Kubernetes/Node",
	"k8_persistent_volume":          "Kubernetes/PersistentVolume",
	"k8_persistent_volume_claim":    "Kubernetes/PersistentVolumeClaim",
	"k8_pod":                        "Kubernetes/Pod",
	"k8_secret":                     "Kubernetes/Secret",
	"k8_service":                    "Kubernetes/Service",
	"k8_config_map":                 "Kubernetes/ConfigMap",
	"k8_service_account":            "Kubernetes/ServiceAccount",
	"k8_stateful_set":               "Kubernetes/StatefulSet",
	"k8_deployment":                 "Kubernetes/Deployment",
	"k8_replicaset":                 "Kubernetes/ReplicaSet",
	"k8_daemonset":                  "Kubernetes/DaemonSet",
	"k8_endpoints":                  "Kubernetes/Endpoint",
	"k8_endpoint_slice":             "Kubernetes/EndpointSlice",
	"k8_event":                      "Kubernetes/Event",
	"k8_job":                        "Kubernetes/Job",
	"k8_cronjob":                    "Kubernetes/CronJob",
	"k8_ingress":                    "Kubernetes/Ingress",
	"k8_network_policy":             "Kubernetes/NetworkPolicy",
	"k8_role":                       "Kubernetes/Role",
	"k8_role_binding":               "Kubernetes/RoleBinding",
	"k8_cluster":                    "Kubernetes/Cluster",
	"k8_cluster_role":               "Kubernetes/ClusterRole",
	"k8_cluster_role_binding":       "Kubernetes/ClusterRoleBinding",
	"k8_pod_disruption_budget":      "Kubernetes/PodDisruptionBudget",
	"k8_pod_template":               "Kubernetes/PodTemplate",
	"k8_horizontal_pod_autoscaler":  "Kubernetes/HorizontalPodAutoscaler",
	"k8_custom_resource_definition": "Kubernetes/CustomResourceDefinition",
	"k8_custom_resource":            "Kubernetes/CustomResource",
	"k8_storage_class":              "Kubernetes/StorageClass",
	"k8_limit_range":                "Kubernetes/LimitRange",
	"k8_namespace":                  "Kubernetes/Namespace",
	"k8_replication_controller":     "Kubernetes/ReplicationController",
	"k8_resource_quota":             "Kubernetes/RessourceQuota",
}
